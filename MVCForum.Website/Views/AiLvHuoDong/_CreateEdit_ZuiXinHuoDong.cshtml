@using MVCForum.Website.Application.ExtensionMethods
@model MVCForum.Website.ViewModels.AiLvHuoDong_CreateEdit_ViewModel
@{
    const string displayNone = "style=\"display: none;\"";

    if (User.Identity.IsAuthenticated && (User.IsInRole(AppConstants.AdminRoleName) || User.IsInRole(AppConstants.SupplierRoleName)))
    {
        ViewBag.ImageUploadType = "forumimageinsert";
    }
    else
    {
        ViewBag.ImageUploadType = "image";
    }
 
}
<div class="row">
    <div class="col-md-12 col-md-offset">

        <script type="text/javascript">
            $(document).ready(function () {
                $("#divyaoqingma").hide();
                ChangeLeiBie();
                $("#LeiBie").change(function () { ChangeLeiBie(); });
            });

            function ChangeLeiBie() {
                var flag = $("#LeiBie").val();
                if (flag == "1") {
                    $("#divyaoqingma").hide();
                }
                else {
                    $("#divyaoqingma").show();
                }
            }
        </script>

        <fieldset>
            @if (Model.Id != Guid.Empty && Model.ShenHeBiaoZhi == MVCForum.Domain.DomainModel.Enum_ShenHeBiaoZhi.AuditReject)
            {
                <div class="form-group">
                    <span class="bg-danger form-control">您所需要发布的活动被管理员审核后驳回，请重新填写后再行审核</span>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(x => x.MingCheng)
                @Html.TextBoxFor(model => model.MingCheng, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MingCheng)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.LeiBie)
                @Html.DropDownListFor(x => x.LeiBie, ViewData["LeiBieList"] as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LeiBie)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.YaoQiu)
                @Html.DropDownListFor(x => x.YaoQiu, ViewData["YaoQiuList"] as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.YaoQiu)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.StartTime)
                @Html.TextBoxFor(model => model.StartTime, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.StopTime)
                @Html.TextBoxFor(model => model.StopTime, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StopTime)
            </div>


            <div class="form-group">
                @Html.LabelFor(x => x.BaoMingJieZhiTime)
                @Html.TextBoxFor(model => model.BaoMingJieZhiTime, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BaoMingJieZhiTime)
            </div>


            <div class="form-group">
                @Html.LabelFor(x => x.DiDian)
                @Html.TextBoxFor(model => model.DiDian, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiDian)
            </div>

            <div class="editor-field editorholder">
                @Html.LabelFor(x => x.LiuCheng)
                @Html.EditorFor(model => model.LiuCheng, new { @class = "form-control postcontent" })
                @Html.ValidationMessageFor(model => model.LiuCheng)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Feiyong)
                @Html.TextBoxFor(model => model.Feiyong, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Feiyong)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.FeiyongShuoMing)
                @Html.TextBoxFor(model => model.FeiyongShuoMing, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FeiyongShuoMing)
            </div>



            <div class="editor-field editorholder">
                @Html.LabelFor(x => x.ZhuYiShiXiang)
                @Html.EditorFor(model => model.ZhuYiShiXiang, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZhuYiShiXiang)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.YuGuRenShu)
                @Html.TextBoxFor(model => model.YuGuRenShu, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.YuGuRenShu)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.XingBieBiLi)<span style="color:red">（请输入"/"或类似"1：2"之类的比例表达式）</span>
                @Html.TextBoxFor(model => model.XingBieBiLi, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.XingBieBiLi)
            </div>

            <div class="form-group" id="divyaoqingma">
                @Html.LabelFor(x => x.YaoQingMa)
                @Html.TextBoxFor(model => model.YaoQingMa, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.YaoQingMa)
            </div>

            @if (Model.Id != Guid.Empty)
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.ZhuangTai)
                    @switch (Model.ZhuangTai)
                    {
                        case MVCForum.Domain.DomainModel.Enum_HuoDongZhuangTai.Registing:
                            <span class="form-control">本活动正在火热报名中</span>
                            break;
                        case MVCForum.Domain.DomainModel.Enum_HuoDongZhuangTai.StopRegister:
                            <span class="form-control">本活动已停止报名，请关注其他的活动</span>
                            break;
                        case MVCForum.Domain.DomainModel.Enum_HuoDongZhuangTai.Finished:
                            <span class="form-control">本活动已结束</span>
                            break;
                        default:
                            break;
                    }
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ShenHeBiaoZhi)
                    @switch (Model.ShenHeBiaoZhi)
                    {
                        case MVCForum.Domain.DomainModel.Enum_ShenHeBiaoZhi.WaitingAudit:
                            <span class="form-control">本活动需审核后才能发布</span>
                            break;
                        case MVCForum.Domain.DomainModel.Enum_ShenHeBiaoZhi.AuditSuccess:
                            <span class="form-control">本活动已发布</span>
                            break;
                        case MVCForum.Domain.DomainModel.Enum_ShenHeBiaoZhi.AuditReject:
                            <span class="form-control">本活动审核被驳回</span>
                            break;
                        default:
                            break;
                    }
                </div>
            }
            <div class="submit-holder">
                <button type="submit" name="btn_Save" class="btn-mvc-green btn-mvc-large btn-mvc-fullwidth">
                    保存
                </button><br />

            </div>
        </fieldset>
    </div>
</div>
